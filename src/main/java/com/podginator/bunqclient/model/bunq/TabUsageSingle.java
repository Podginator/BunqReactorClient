package com.podginator.bunqclient.model.bunq;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * TabUsageSingle is a Tab that can be paid once. The TabUsageSingle is created with the status
 * OPEN. Optionally you can add TabItems to the tab using /tab/_/tab-item, TabItems don't affect the
 * total amount of the Tab. However, if you've created any TabItems for a Tab the sum of the amounts
 * of these items must be equal to the total_amount of the Tab when you change its status to
 * WAITING_FOR_PAYMENT. By setting the visibility object a TabUsageSingle with the status OPEN or
 * WAITING_FOR_PAYMENT can be made visible to customers. As soon as a customer pays the
 * TabUsageSingle its status changes to PAID, and it can't be paid again.
 */
@AllArgsConstructor
@Data
@NoArgsConstructor
public class TabUsageSingle {

  /** The uuid of the created TabUsageSingle. */
  @JsonProperty("uuid")
  private String uuid;

  /** The timestamp of the Tab's creation. */
  @JsonProperty("created")
  private String created;

  /** The timestamp of the Tab's last update. */
  @JsonProperty("updated")
  private String updated;

  /** The merchant reference of the Tab, as defined by the owner. */
  @JsonProperty("merchant_reference")
  private String merchantReference;

  /** The description of the TabUsageMultiple. Maximum 9000 characters. */
  @JsonProperty("description")
  private String description;

  /** The status of the Tab. Can be OPEN, WAITING_FOR_PAYMENT, PAID or CANCELED. */
  @JsonProperty("status")
  private String status;

  /** The total amount of the Tab. */
  @JsonProperty("amount_total")
  private Amount amountTotal;

  /** The amount that has been paid for this Tab. */
  @JsonProperty("amount_paid")
  private Amount amountPaid;

  /**
   * The token used to redirect mobile devices directly to the bunq app. Because they can't scan a
   * QR code.
   */
  @JsonProperty("qr_code_token")
  private String qrCodeToken;

  /** The URL redirecting user to the tab payment in the bunq app. Only works on mobile devices. */
  @JsonProperty("tab_url")
  private String tabUrl;

  /**
   * The visibility of a Tab. A Tab can be visible trough NearPay, the QR code of the CashRegister
   * and its own QR code.
   */
  @JsonProperty("visibility")
  private TabVisibility visibility;

  /** The minimum age of the user paying the Tab. */
  @JsonProperty("minimum_age")
  private Boolean minimumAge;

  /** Whether or not an billing and shipping address must be provided when paying the Tab. */
  @JsonProperty("require_address")
  private String requireAddress;

  /** The URL which the user is sent to after paying the Tab. */
  @JsonProperty("redirect_url")
  private String redirectUrl;

  /** The moment when this Tab expires. */
  @JsonProperty("expiration")
  private String expiration;

  /** The alias of the party that owns this tab. */
  @JsonProperty("alias")
  private LabelMonetaryAccount alias;

  /** The location of the cash register that created this tab. */
  @JsonProperty("cash_register_location")
  private Geolocation cashRegisterLocation;

  /** The tab items of this tab. */
  @JsonProperty("tab_item")
  private List<TabItem> tabItem;

  /**
   * An array of attachments that describe the tab. Uploaded through the POST
   * /user/{userid}/attachment-tab endpoint.
   */
  @JsonProperty("tab_attachment")
  private List<BunqId> tabAttachment;

  /**
   * The reference of the Tab, as defined by the owner. This reference will be set for any payment
   * that is generated by this tab. Must be unique among all the owner's tabs for the used monetary
   * account.
   */
  @JsonProperty("merchant_reference_field_for_request")
  private String merchantReferenceFieldForRequest;

  /**
   * The description of the Tab. Maximum 9000 characters. Field is required but can be an empty
   * string.
   */
  @JsonProperty("description_field_for_request")
  private String descriptionFieldForRequest;

  /**
   * The status of the Tab. On creation the status must be set to OPEN. You can change the status
   * from OPEN to WAITING_FOR_PAYMENT.
   */
  @JsonProperty("status_field_for_request")
  private String statusFieldForRequest;

  /**
   * The total amount of the Tab. Must be a positive amount. As long as the tab has the status OPEN
   * you can change the total amount. This amount is not affected by the amounts of the TabItems.
   * However, if you've created any TabItems for a Tab the sum of the amounts of these items must be
   * equal to the total_amount of the Tab when you change its status to WAITING_FOR_PAYMENT.
   */
  @JsonProperty("amount_total_field_for_request")
  private Amount amountTotalFieldForRequest;

  /** [DEPRECATED] Whether or not a higher amount can be paid. */
  @JsonProperty("allow_amount_higher_field_for_request")
  private Boolean allowAmountHigherFieldForRequest;

  /** [DEPRECATED] Whether or not a lower amount can be paid. */
  @JsonProperty("allow_amount_lower_field_for_request")
  private Boolean allowAmountLowerFieldForRequest;

  /**
   * [DEPRECATED] Whether or not the user paying the Tab should be asked if he wants to give a tip.
   * When want_tip is set to true, allow_amount_higher must also be set to true and
   * allow_amount_lower must be false.
   */
  @JsonProperty("want_tip_field_for_request")
  private Boolean wantTipFieldForRequest;

  /** The minimum age of the user paying the Tab. */
  @JsonProperty("minimum_age_field_for_request")
  private Integer minimumAgeFieldForRequest;

  /**
   * Whether a billing and shipping address must be provided when paying the Tab. Possible values
   * are: BILLING, SHIPPING, BILLING_SHIPPING, NONE, OPTIONAL. Default is NONE.
   */
  @JsonProperty("require_address_field_for_request")
  private String requireAddressFieldForRequest;

  /** The URL which the user is sent to after paying the Tab. */
  @JsonProperty("redirect_url_field_for_request")
  private String redirectUrlFieldForRequest;

  /**
   * The visibility of a Tab. A Tab can be visible trough NearPay, the QR code of the CashRegister
   * and its own QR code.
   */
  @JsonProperty("visibility_field_for_request")
  private TabVisibility visibilityFieldForRequest;

  /** The moment when this Tab expires. Can be at most 1 hour into the future. */
  @JsonProperty("expiration_field_for_request")
  private String expirationFieldForRequest;

  /**
   * An array of attachments that describe the tab. Uploaded through the POST
   * /user/{userid}/attachment-tab endpoint.
   */
  @JsonProperty("tab_attachment_field_for_request")
  private List<BunqId> tabAttachmentFieldForRequest;
}
